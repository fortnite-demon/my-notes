version: '3.8'

include:
  - 'Сервисы которые хотим добавить из других yml'

x-env: &env
  DB_NAME: "prediction"
  DB_USER: "prediction"
  DB_PASSWORD: "prediction"
  DB_PORT: 5432
x-twoenvs: $twoenvs
  EXAMPLE: 1

services:
  service-name:
    ---------- Образ или путь к Dockerfile
    build:
      context: ./path
    или
    image: image:tag
    ----------
    
    sercrets:
      - mysercret
      
    ----------
    env_file: ./.env
    или ещё указать
      - path: ...
        required: true/false
    ----------
    
    ports:
      - "3000:3000"
      
    networks:
      - prediction-network
      
    volumes:
      - ./prediction:/app
      - static_volume:/app/static
      
    depends_on:
      postgres-db:
        condition: [ service_unhealthly, service_healthly (при наличии параметра healtcheck) ], started, service_completed, service_running 
        
    ---------- Переменные окружения
    environment:
      <<: [*env, *twoenvs]
    или
    environment:
      VAR: value
    ----------
    
    restart: on-failure:5 (пять попыток перезапуска), unless-stopped, always, no

    ----------

    user: ...

    profiles: ["dev","prod"...] При использовании docker compose --profile dev up, запустит все сервисы dev, можно также после up указать сервис 
    
    ---------- Проверяет контейнер на здоровье
    healthcheck:
      test: [ "CMD", "curl -f http://localhost:8000/api/health || exit 1" ]
      interval: 1m10s Через сколько
      timeout: 10s Сколько ждёт ответа
      retries: 3 Попытки
      start_period: 10s Через сколько после запуска контейнера
    ----------
    
    command: Команда при запуске
    entrypoint: ...
    container_name: container

    ---------- При изменении path будет синхронизировать target с контейнером
    develop:
      watch:
        - action: sync
          path: .
          target: /code
          ignore: при желании
    ----------


volumes:
  pg_data:
  static_volume:
  
secrets:
  mysecret:
    file: prediction-app/file.txt
    или
    external: true Если секрет внешний

networks:
  prediction-network:
    driver: bridge

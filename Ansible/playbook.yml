---
- hosts: web:db                 # Хосты из web и db
         test:&db               # Хосты db в test 
         test:!db               # Исключает хосты db из test
         *.example.com          # Подстановка
         a[0-1].ex.com          # Диапазон
         ~a\d\.mearme\.(com|ru) # Регулярное выражение

         dev:test:&db:!queue    # Комбинированное выржание, результаты применяются слева на право
  serial: 1 или 50% # Сколько хостов нужно обрабатывать одновременно, можно также указать процент
    - 1             # можно указать также списком, например, есть 10 хостов, сначала будет обработан 1 хост,
    - 50%           # затем 5, а потом 4
  max_fail_percentage: 0    # Процент ошибок, при достижении которого сценарий завершится неудачей
  strategy: linear или free # linear по умолчанию, free - ansible не будет ждать завершения задачи на другом ъосте
                            # а сразу приступит к следующей
  
  tasks:
    - name: command
      delegate_to: localhost
      ansible.builtin.command:
        cmd: /opt/cmd/cmd
      run_once: true           # Запускает задачу только один раз, если например будет группа хостов в hosts,
                               # то задача будет запущена один раз.
      check_mode: false        # Отключение checkmode, даже при запуске с ansible-playbook --check

    - name: meta commands
      ansible.builtin.meta: end_play    # завершает выполнение операции без генерирования признака ошибки
                            end_batch   # завершает обработку текущего пакета при использовании serial
                            end_host    # завершает выполнение задач на текущем хосте без генерирования признака ошибки
                            clear_facts # очищает факты
                            
    - name: clone linux kernel repo
      ansible.builtin.git:
        repo: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
        dest: kernel
      async: 3600 
      poll: 0 
      register: linux_clone 

    - name: next task
      ...

    - name: check clone
      ansible.builtin.async_status:
        jid: "{{ linux_clone.ansible_job_id }}"
      register: result
      until: result.finished
      retries: 3600

  handlers:
    - name: Changed nginx conf
      ansible.builtin.service:
        name: nginx
        state: restarted
      listen: Restart nginx # Можем уведомить обработчик по этим словам, также в других обработчиках можем указать Restart nginx в listen
